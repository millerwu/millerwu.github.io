<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Wu</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-10-31T14:06:41.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>wu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>macOS 10.12 Sierra上Android 源码的下载和编译</title>
    <link href="http://yoursite.com/2017/10/31/macOS-10-12-Sierra%E4%B8%8AAndroid-%E6%BA%90%E7%A0%81%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%92%8C%E7%BC%96%E8%AF%91/"/>
    <id>http://yoursite.com/2017/10/31/macOS-10-12-Sierra上Android-源码的下载和编译/</id>
    <published>2017-10-31T14:05:12.000Z</published>
    <updated>2017-10-31T14:06:41.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="macOS-10-12-Sierra上Android-源码的下载和编译"><a href="#macOS-10-12-Sierra上Android-源码的下载和编译" class="headerlink" title="macOS 10.12 Sierra上Android 源码的下载和编译"></a>macOS 10.12 Sierra上Android 源码的下载和编译</h1><p>最近入手mac，准备在mac 上进行android 开发，查看、编译源码，所以将在mac上下载编译的过程记录一下</p><h2 id="参考网站"><a href="#参考网站" class="headerlink" title="参考网站"></a>参考网站</h2><ul><li><a href="https://source.android.com/source/" target="_blank" rel="external">Google Android 官网</a> (需科学上网)</li><li>中国科学技术大学 AOSP 镜像<a href="https://lug.ustc.edu.cn/wiki/mirrors/help/aosp" target="_blank" rel="external">使用指南</a></li></ul><h2 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h2><ol><li>macOS Sierra 10.12.6</li><li>JDK version “1.8.0_144”</li><li>Xcode 8.2.1 (最新版本已经是9.0.1，编译时遇到编译错误)</li><li>本地源码位置 /Volumes/android/working 对应分区大小100G</li></ol><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="创建分区"><a href="#创建分区" class="headerlink" title="创建分区"></a>创建分区</h3><p>根据官网说明，macOS文件系统不区分大小写，所以要先使用磁盘映像在现有的环境下创建区分大小写的文件系统。使用一下shell命令创建磁盘映像<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># hdiutil create -type SPARSE -fs &apos;Case-sensitive Journaled HFS+&apos; -size 40g ~/android.dmg</div></pre></td></tr></table></figure></p><p>这将创建一个名为android.dmg文件，该文件在装载后可用作具有Android开发所需格式的存储卷。<br>如果需要更大的存储卷，还可以使用一下命令来调整大小：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># hdiutil resize -size &lt;new-size-you-want&gt;g ~/android.dmg.sparseimage</div></pre></td></tr></table></figure></p><p>对于存储在主目录下名为android.img的磁盘映像，使用以下命令进行装载和卸载：</p><ul><li>装载命令：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># hdiutil attach ~/android.dmg -mountpoint /Volumes/android</div><div class="line">``` </div><div class="line">- 卸载命令：</div></pre></td></tr></table></figure></li></ul><h1 id="hdiutil-detach-Volumes-android"><a href="#hdiutil-detach-Volumes-android" class="headerlink" title="hdiutil detach /Volumes/android"></a>hdiutil detach /Volumes/android</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">为了方便，可以向~/.bash_profile中添加辅助函数：</div><div class="line">- 装载函数</div></pre></td></tr></table></figure><h1 id="mount-the-android-file-image"><a href="#mount-the-android-file-image" class="headerlink" title="mount the android file image"></a>mount the android file image</h1><p>function mountAndroid { hdiutil attach ~/android.dmg -mountpoint /Volumes/android; }<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">- 卸载函数</div></pre></td></tr></table></figure></p><h1 id="unmount-the-android-file-image"><a href="#unmount-the-android-file-image" class="headerlink" title="unmount the android file image"></a>unmount the android file image</h1><p>function umountAndroid() { hdiutil detach /Volumes/android; }<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">## 安装JDK</div><div class="line">在[JDK官网](http://www.oracle.com/technetwork/java/javase/downloads/java-archive-javase8-2177648.html#jdk-8u45-oth-JPR)下载最新版本的JDK版本并安装，我安装的时1.8.0_144</div><div class="line"></div><div class="line">## 安装Xcode</div><div class="line">最新版本9.0.1在编译时会遇到问题，下载使用了8.2.1的版本  </div><div class="line">下载地址： https://itunes.apple.com/us/app/xcode/id497799835?ls=1&amp;mt=12</div><div class="line"></div><div class="line">## MacOS-SDK</div><div class="line">macOS10.12.SDK弃用了编译源码需要的syscall，因此需要单独下载更早版本的macOS的SDK  </div><div class="line">下载地址： https://github.com/phracker/MacOSX-SDKs</div><div class="line"></div><div class="line">## MacPorts</div><div class="line">通过[macports.org](https://www.macports.org/install.php) 安装 MacPorts。</div><div class="line"></div><div class="line">## 其他软件</div><div class="line">通过 MacPorts 获取 Make、Git 和 GPG 程序包：</div></pre></td></tr></table></figure></p><p>$ POSIXLY_CORRECT=1 sudo port install gmake libsdl git gnupg<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">## 下载源代码</div><div class="line">编译环境配置完毕，开始下载代码</div><div class="line"></div><div class="line">### 下载安装repo</div><div class="line">Repo 是一款工具，可让您在 Android 环境中更轻松地使用 Git。要安装 Repo，请执行以下操作：</div><div class="line">1. 确保主目录下有一个 bin/ 目录，并且该目录包含在路径中：</div></pre></td></tr></table></figure></p><p>$ mkdir ~/bin<br>$ PATH=~/bin:$PATH<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">2. 下载 Repo 工具，并确保它可执行：</div></pre></td></tr></table></figure></p><p>$ curl <a href="https://storage.googleapis.com/git-repo-downloads/repo" target="_blank" rel="external">https://storage.googleapis.com/git-repo-downloads/repo</a> &gt; ~/bin/repo<br>$ chmod a+x ~/bin/repo<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">官方提供的3个Repo SHA-1校验码和：  </div><div class="line">对于 1.21 版，Repo 的 SHA-1 校验和为 b8bd1804f432ecf1bab730949c82b93b0fc5fede  </div><div class="line">对于 1.22 版，Repo 的 SHA-1 校验和为 da0514e484f74648a890c0467d61ca415379f791  </div><div class="line">对于 1.23 版，Repo 的 SHA-1 校验和为 ac9d646f6d699f6822a6bc787d3e7338ae7ab6ed</div><div class="line"></div><div class="line">### 初始化Repo 客户端</div><div class="line">安装 Repo 后，设置您的客户端以访问 Android 源代码代码库：</div><div class="line">1. 创建一个空目录来存放您的工作文件。如果您使用的是 MacOS，必须在区分大小写的文件系统中创建该目录。为其指定一个您喜欢的任意名称：</div></pre></td></tr></table></figure></p><p>$ mkdir working<br>$ cd working<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">2. 使用您的真实姓名和电子邮件地址配置 Git。要使用 Gerrit 代码审核工具，您需要一个与已注册的 Google 帐号关联的电子邮件地址。确保这是您可以接收邮件的有效地址。您在此处提供的姓名将显示在您提交的代码的提供方信息中。</div></pre></td></tr></table></figure></p><p>$ git config –global user.name “Your Name”<br>$ git config –global user.email “you@example.com”<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">3. 运行 repo init 以获取最新版本的 Repo 及其最近的所有错误更正内容。您必须为清单指定一个网址，该网址用于指定 Android 源代码中包含的各个代码库将位于工作目录中的什么位置。</div></pre></td></tr></table></figure></p><p>$ repo init -u <a href="https://android.googlesource.com/platform/manifest" target="_blank" rel="external">https://android.googlesource.com/platform/manifest</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">要对“master”以外的分支进行校验，请使用 -b 来指定相应分支。要查看分支列表，请参阅[源代码标记和版本](https://source.android.com/source/build-numbers#source-code-tags-and-builds)。</div></pre></td></tr></table></figure></p><p>$ repo init -u <a href="https://android.googlesource.com/platform/manifest" target="_blank" rel="external">https://android.googlesource.com/platform/manifest</a> -b android-7.1.1_r1<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">如果无法科学上网访问android 官网，上面的步骤可以使用国内大学镜像：</div></pre></td></tr></table></figure></p><p>repo init -u git://mirrors.ustc.edu.cn/aosp/platform/manifest</p><h2 id="如果提示无法连接到-gerrit-googlesource-com，可以编辑-bin-repo，把-REPO-URL-一行替换成下面的："><a href="#如果提示无法连接到-gerrit-googlesource-com，可以编辑-bin-repo，把-REPO-URL-一行替换成下面的：" class="headerlink" title="如果提示无法连接到 gerrit.googlesource.com，可以编辑 ~/bin/repo，把 REPO_URL 一行替换成下面的："></a>如果提示无法连接到 gerrit.googlesource.com，可以编辑 ~/bin/repo，把 REPO_URL 一行替换成下面的：</h2><h2 id="REPO-URL-‘https-gerrit-googlesource-proxy-ustclug-org-git-repo‘"><a href="#REPO-URL-‘https-gerrit-googlesource-proxy-ustclug-org-git-repo‘" class="headerlink" title="REPO_URL = ‘https://gerrit-googlesource.proxy.ustclug.org/git-repo‘"></a>REPO_URL = ‘<a href="https://gerrit-googlesource.proxy.ustclug.org/git-repo" target="_blank" rel="external">https://gerrit-googlesource.proxy.ustclug.org/git-repo</a>‘</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">```</div><div class="line">repo init -u git://mirrors.ustc.edu.cn/aosp/platform/manifest -b android-7.1.1_r1</div></pre></td></tr></table></figure><h3 id="开始下载"><a href="#开始下载" class="headerlink" title="开始下载"></a>开始下载</h3><p>初始化任务以后，使用下面的命令来下载源码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ repo sync</div></pre></td></tr></table></figure><p>下载时间取决于下载速度，这是一个漫长的过程，如果中途出现中断，再次执行这个命令即可</p><h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><p>当源码下载完成以后，进入编译环节</p><h3 id="准备工作-1"><a href="#准备工作-1" class="headerlink" title="准备工作"></a>准备工作</h3><ol><li>切换bash，使用命令：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ chsh -s /bin/bash</div></pre></td></tr></table></figure><ol><li>设置文件描述符限制<br>在macOS中，默认限制的同时打开的文件数量很少，不能满足编译过程中的高并发需要，因此需要在shell中运行命令：  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ulimit -S -n 1024</div></pre></td></tr></table></figure></li></ol><h3 id="开始编译"><a href="#开始编译" class="headerlink" title="开始编译"></a>开始编译</h3><h4 id="编译环境设置"><a href="#编译环境设置" class="headerlink" title="编译环境设置"></a>编译环境设置</h4><p>在源代码根目录执行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ source ./build/envsetup.sh</div></pre></td></tr></table></figure><p>然后选择lunch 命令选择设备：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">$ lunch</div><div class="line"></div><div class="line">You&apos;re building on Darwin</div><div class="line"></div><div class="line">Lunch menu... pick a combo:</div><div class="line">     1. aosp_arm-eng</div><div class="line">     2. aosp_arm64-eng</div><div class="line">     3. aosp_mips-eng</div><div class="line">     4. aosp_mips64-eng</div><div class="line">     5. aosp_x86-eng</div><div class="line">     6. aosp_x86_64-eng</div><div class="line">     7. full_fugu-userdebug</div><div class="line">     8. aosp_fugu-userdebug</div><div class="line">     9. mini_emulator_arm64-userdebug</div><div class="line">     10. m_e_arm-userdebug</div><div class="line">     11. m_e_mips-userdebug</div><div class="line">     12. m_e_mips64-eng</div><div class="line">     13. mini_emulator_x86-userdebug</div><div class="line">     14. mini_emulator_x86_64-userdebug</div><div class="line">     15. aosp_dragon-userdebug</div><div class="line">     16. aosp_dragon-eng</div><div class="line">     17. aosp_marlin-userdebug</div><div class="line">     18. aosp_sailfish-userdebug</div><div class="line">     19. aosp_flounder-userdebug</div><div class="line">     20. aosp_angler-userdebug</div><div class="line">     21. aosp_bullhead-userdebug</div><div class="line">     22. hikey-userdebug</div><div class="line">     23. aosp_shamu-userdebug</div><div class="line"></div><div class="line">Which would you like? [aosp_arm-eng]</div></pre></td></tr></table></figure><p>根据自己的需求，选择对应的类型，我选择1之后：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">============================================</div><div class="line">PLATFORM_VERSION_CODENAME=REL</div><div class="line">PLATFORM_VERSION=7.1.1</div><div class="line">TARGET_PRODUCT=aosp_arm</div><div class="line">TARGET_BUILD_VARIANT=eng</div><div class="line">TARGET_BUILD_TYPE=release</div><div class="line">TARGET_BUILD_APPS=</div><div class="line">TARGET_ARCH=arm</div><div class="line">TARGET_ARCH_VARIANT=armv7-a</div><div class="line">TARGET_CPU_VARIANT=generic</div><div class="line">TARGET_2ND_ARCH=</div><div class="line">TARGET_2ND_ARCH_VARIANT=</div><div class="line">TARGET_2ND_CPU_VARIANT=</div><div class="line">HOST_ARCH=x86_64</div><div class="line">HOST_2ND_ARCH=x86</div><div class="line">HOST_OS=darwin</div><div class="line">HOST_OS_EXTRA=Darwin-16.7.0-x86_64-i386-64bit</div><div class="line">HOST_CROSS_OS=</div><div class="line">HOST_CROSS_ARCH=</div><div class="line">HOST_CROSS_2ND_ARCH=</div><div class="line">HOST_BUILD_TYPE=release</div><div class="line">BUILD_ID=NMF26F</div><div class="line">OUT_DIR=out</div><div class="line">============================================</div></pre></td></tr></table></figure><p>最后使用 下面命令开始编译：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ make -j16</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;macOS-10-12-Sierra上Android-源码的下载和编译&quot;&gt;&lt;a href=&quot;#macOS-10-12-Sierra上Android-源码的下载和编译&quot; class=&quot;headerlink&quot; title=&quot;macOS 10.12 Sierra上And
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello Hexo</title>
    <link href="http://yoursite.com/2017/10/26/Hello/"/>
    <id>http://yoursite.com/2017/10/26/Hello/</id>
    <published>2017-10-26T14:05:07.000Z</published>
    <updated>2017-10-26T14:05:07.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Efficient Integer To String</title>
    <link href="http://yoursite.com/2017/09/18/Efficient-Integer-To-String/"/>
    <id>http://yoursite.com/2017/09/18/Efficient-Integer-To-String/</id>
    <published>2017-09-18T12:50:17.000Z</published>
    <updated>2017-10-26T14:05:07.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Integer-Converve-to-String"><a href="#Integer-Converve-to-String" class="headerlink" title="Integer Converve to String"></a>Integer Converve to String</h1><p>注意点   </p><ul><li>写c++ 模板函数，可以涵盖使用 int， short， long， long long 类型的各个类型</li><li>注意char 数值的大小</li><li>考虑负数case</li></ul><p>在muduo 库中看到一种很好的写法，记录下来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">char digits[] = &quot;9876543210123456789&quot;;</div><div class="line">int zero = 9;</div><div class="line"></div><div class="line">template &lt;typename T&gt;</div><div class="line">int IntToString(char buf[], T t)</div><div class="line">&#123;</div><div class="line">  int64_t num = static_cast&lt;int64_t&gt;(t);</div><div class="line">  int size = 0;</div><div class="line">  int i = 0;</div><div class="line"></div><div class="line">  do &#123;</div><div class="line">    int index = static_cast&lt;char&gt;(num % 10);</div><div class="line">    num = num/10;</div><div class="line">    buf[i++] = digits[zero+index];</div><div class="line">    size++;</div><div class="line">  &#125; while (num != 0);</div><div class="line"></div><div class="line">  if (t &lt; 0)  &#123;</div><div class="line">    buf[i++] = &apos;-&apos;;</div><div class="line">  &#125;</div><div class="line">  buf[i] = &apos;\0&apos;;</div><div class="line">  std::reverse(&amp;buf[0], &amp;buf[i]);</div><div class="line"></div><div class="line">  return size;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>自己在用普通模式写的情况下，因为负数的case，会导致代码逻辑写的比较复杂；使用这个方案，代码清晰，高效</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Integer-Converve-to-String&quot;&gt;&lt;a href=&quot;#Integer-Converve-to-String&quot; class=&quot;headerlink&quot; title=&quot;Integer Converve to String&quot;&gt;&lt;/a&gt;Integer 
      
    
    </summary>
    
    
  </entry>
  
</feed>
